declare
PRIMARYKEY EXCEPTION;
FOREIGNKEY EXCEPTION;
LARGEVALUE EXCEPTION;
PRAGMA EXCEPTION_INIT(PRIMARYKEY,-00001);
PRAGMA EXCEPTION_INIT(FOREIGNKEY,-02291);
PRAGMA EXCEPTION_INIT(LARGEVALUE,-01438);
 customer_id1 customer.customer_id%type;
fname1 customer.f_name%type;
lname1 customer.l_name%type;
mname1 customer.m_name%type;
password1 customer.password%type;
email1 customer.email_id%type;
street_no1 customer.street_no%type;
street_name1 customer.street_name%type;
app_no1 customer.app_no%type;
city1 customer.city%type;
state1  customer.state%type;
pin_code1  customer.pin_code%type;
dob1 customer.DOB%type;
gender1 customer.gender%type;
 begin  
customer_id1:=:customer_id;
fname1:=:fname;
mname1:=:mname;
lname1:=:lname;
password1:=:password;
email1:=:email;
street_no1:=:street_no;
street_name1:=:street_name;
app_no1:=:app_no;
city1:=:city;
state1:=:state;
pin_code1:=:pin_code;
dob1:=:dob;
gender1:=:gender;


newuser1( customer_id1 ,fname1 ,
lname1  ,
mname1  ,
password1 ,
email1  ,
street_no1  ,
street_name1  ,
app_no1 ,
city1  ,
state1  ,
pin_code1  ,
dob1 ,
gender1  );
exception
when LARGEVALUE THEN
dbms_output.put_line('TOO LARGE VALUE ENTERED');

when no_data_found then
dbms_output.put_line('Invalid Entry');
when Too_many_rows then
dbms_output.put_line('Tooo Many Rows Were Found!!!');
when invalid_number then
dbms_output.put_line('Entered Number Was Invalid!!!');
when invalid_cursor then
dbms_output.put_line('Using Invalid Cursor!!!!');

when PRIMARYKEY THEN
dbms_output.put_line('PRIMARY KEY VIOLATED');
when FOREIGNKEY THEN
dbms_output.put_line('FORIEGN KEY VIOLATED');

WHEN OTHERS THEN
dbms_output.put_line('Some Undeclared Error Occured');
end;

















































































